@model List<WebAppFrontend.Models.Order>

@{
    ViewData["Title"] = "Order";
}

<h1>Order</h1>

<form class="mb-3">
    <div class="form-row align-items-end">
        <div>
            <p><p> Filter </p></p>
            <div class="form-group col-md-2">
                <input type="date" name="startDate" class="form-control" />
            </div>
            <div class="form-group col-md-2">
                <input type="date" name="endDate" class="form-control" />
            </div>
        </div>
        <div>
            <div class="form-group col-md-3">
                <p><p> Search </p></p>
                <select name="searchType" class="form-control">
                    <option value="">Select Search Type</option>
                    <option value="OrderDate">Search by Order Date</option>
                    <option value="Region">Search by Region</option>
                    <option value="City">Search by City</option>
                    <option value="Category">Search by Category</option>
                    <option value="Product">Search by Product</option>
                </select>
            </div>
            <div class="form-group col-md-3">
                <input type="text" name="searchValue" class="form-control" placeholder="Search value" />
            </div>
            <div class="form-group col-md-2">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
</form>





<table class="table">
    <thead>
        <tr>
            <th class="text-center">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="Number">Number</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="OrderDate">OrderDate</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="Region">Region</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="City">City</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="Category">Category</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="Product">Product</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="Quantity">Quantity</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="UnitPrice">UnitPrice</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortOrder"]" asp-route-sortColumn="TotalPrice">TotalPrice</a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model == null || !Model.Any())
        {
            <tr>
                <td colspan="10" class="text-center">No Date</td>
            </tr>
        }
        else
        {
            for (int i = 0; i < Model.Count; i++)
            {
                var order = Model[i];
                <tr>
                    <td class="text-center">@(i + 1)</td>
                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                    <td>@order.Region</td>
                    <td>@order.City</td>
                    <td>@order.Category</td>
                    <td>@order.Product</td>
                    <td>@order.Quantity</td>
                    <td>@order.UnitPrice.ToString("C")</td>
                    <td>@order.TotalPrice.ToString("C")</td>
                    <td>
                        <a class="btn btn-primary"
                           data-toggle="modal"
                           data-target="#editOrderModal"
                           data-id="@order.Id"
                           data-order-date="@order.OrderDate.ToString("yyyy-MM-dd")"
                           data-region="@order.Region"
                           data-city="@order.City"
                           data-category="@order.Category"
                           data-product="@order.Product"
                           data-quantity="@order.Quantity"
                           data-unit-price="@order.UnitPrice"
                           onclick="setEditOrderData(this)">Edit</a>
                        <a class="btn btn-danger" asp-controller="Order" asp-action="Delete" asp-route-id="@order.Id">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<button type="button" class="btn btn-success position-fixed" style="bottom: 80px; right: 20px;" data-toggle="modal" data-target="#addOrderModal">
    Add New Order
</button>

@await Html.PartialAsync("_AddOrderForm", new WebAppFrontend.Models.Order())
@await Html.PartialAsync("_EditOrderForm", new WebAppFrontend.Models.Order())

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
    function setEditOrderData(button) {
        const orderId = button.getAttribute('data-id');
        const orderDate = button.getAttribute('data-order-date');
        const region = button.getAttribute('data-region');
        const city = button.getAttribute('data-city');
        const category = button.getAttribute('data-category');
        const product = button.getAttribute('data-product');
        const quantity = button.getAttribute('data-quantity');
        const unitPrice = button.getAttribute('data-unit-price');

        document.getElementById('editOrderId').value = orderId;
        document.getElementById('editOrderDate').value = orderDate;
        document.getElementById('editRegion
</script>